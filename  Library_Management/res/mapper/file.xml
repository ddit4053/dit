<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="file">
	 <!-- 파일 그룹 번호로 파일 목록 조회 -->
    <select id="selectFilesByGroupNum" parameterType="int" resultType="File_StorageVo">
        SELECT * 
          FROM FILE_STORAGE
         WHERE FILE_GROUP_NUM = #{fileGroupNum}
         ORDER BY FILE_NO ASC
    </select>
    
    <!-- 파일 번호로 파일 정보 조회 -->
    <select id="selectFileByNo" parameterType="int" resultType="File_StorageVo">
        SELECT *
		  FROM FILE_STORAGE
		 WHERE FILE_NO = #{fileNo}
    </select>
    
    <!-- 새 파일 등록 -->
    <insert id="insertFile" parameterType="File_StorageVo">
        <selectKey keyProperty="fileNo" resultType="int" order="BEFORE">
            SELECT FILE_STORAGE_SEQ.NEXTVAL FROM DUAL
        </selectKey>
			INSERT INTO FILE_STORAGE
			VALUES (#{fileNo},
			        #{orgName},
			        #{saveName},
			        #{filePath},
			        #{fileSize},
			        #{fileType},
			        SYSDATE,
			        #{referenceType},
			        #{referenceId},
			        #{userNo},
			        #{fileGroupNum},
			        'N',   <!-- DELYN 기본값 -->
            		NULL   <!-- DELETE_DATE 기본값 -->
			        )
    </insert>
    
    <update id="updateFileReference" parameterType="File_StorageVo">
	    UPDATE FILE_STORAGE
	       SET REFERENCE_ID = #{referenceId}
	     WHERE FILE_NO = #{fileNo}
	</update>
   	
   	<!-- 단일 파일 논리적 삭제 -->
	<update id="deleteFile" parameterType="int">
	    UPDATE FILE_STORAGE
	       SET DELYN = 'Y',
	           DELETE_DATE = SYSDATE
	     WHERE FILE_NO = #{fileNo}
	</update>
	
	<!-- 삭제된 지 일정 기간이 지난 파일 조회 -->
	<select id="selectFilesToPurge" parameterType="int" resultType="File_StorageVo">
	    SELECT *
	      FROM FILE_STORAGE
	     WHERE DELYN = 'Y'
	     <![CDATA[ 
	       AND DELETE_DATE < SYSDATE - #{daysOld}
	     ]]>  
	</select>
	
	<!-- 삭제된 지 일정 기간이 지난 파일 메타데이터 물리적 삭제 -->
	<delete id="purgeDeletedFiles" parameterType="int">
	    DELETE FROM FILE_STORAGE
	     WHERE DELYN = 'Y'
	     <![CDATA[
	       AND DELETE_DATE < SYSDATE - #{daysOld}
	     ]]>  
	</delete>
	
	<!-- 미사용 파일 그룹 조회 -->
	<select id="findUnusedFileGroups" resultType="int">
	    SELECT FG.FILE_GROUP_NUM
	      FROM FILE_GROUP FG
	     WHERE NOT EXISTS (
	           SELECT 1
	             FROM BOOK_BOARD BB
	            WHERE BB.FILE_GROUP_NUM = FG.FILE_GROUP_NUM
	              AND BB.DELYN = 'N'
	           )
	       AND FG.DELYN = 'N'
	</select>	
    
    <!-- 파일 그룹에 속한 모든 파일 논리 삭제(DB 메타데이터만 삭제) -->
    <update id="deleteFilesByGroupNum" parameterType="int">
         UPDATE FILE_STORAGE
       		SET DELYN = 'Y',
           		DELETE_DATE = SYSDATE
    	  WHERE FILE_GROUP_NUM = #{fileGroupNum}
    </update>
    
    <!-- 파일 그룹 논리적 삭제 -->
	<update id="deleteFileGroup" parameterType="int">
	    UPDATE FILE_GROUP
	       SET DELYN = 'Y',
	           DELETE_DATE = SYSDATE
	     WHERE FILE_GROUP_NUM = #{fileGroupNum}
	</update>
    
    <!-- 새 파일 그룹 생성 -->
    <insert id="createFileGroup" parameterType="int">
        <selectKey keyProperty="fileGroupNum" resultType="int" order="AFTER">
            SELECT FILE_GROUP_SEQ.CURRVAL FROM DUAL
        </selectKey>
        INSERT INTO FILE_GROUP (FILE_GROUP_NUM, DELYN, DELETE_DATE)
        VALUES (FILE_GROUP_SEQ.NEXTVAL, 'N', NULL)
    </insert>

</mapper>
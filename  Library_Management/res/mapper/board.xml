<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	
	<!-- 통합된 게시글 목록 조회 - 검색, 정렬, 페이징 모두 처리 -->
	<select id="selectBoardList" parameterType="map" resultType="BookBoardVo">
		SELECT A.*
		  FROM (
		        SELECT ROWNUM AS RNUM,
		               B.*
		          FROM (
		                SELECT B.BOARD_NO,
		                       B.TITLE,
		                       B.CONTENT,
		                       TO_CHAR(B.WRITTEN_DATE, 'YYYY-MM-DD') AS WRITTEN_DATE,
		                       B.VIEWS,
		                       B.USER_NO,
		                       B.CODE_NO,
		                       B.FILE_GROUP_NUM,
		                       B.DELYN,
		                       U.NAME AS WRITER,
		                       (SELECT COUNT(*)
		                          FROM COMMENTS C
		                         WHERE C.BOARD_NO = B.BOARD_NO) AS COMMENTS_COUNT  
		                  FROM BOOK_BOARD B
		                  JOIN USERS U ON (B.USER_NO = U.USER_NO)
		                 WHERE 1=1
		                   AND B.DELYN = 'N'
		                 
	               <!-- 검색어 WHERE 조건 분기절: 제목, 내용, 작성자, 제목+작성자 -->
				<if test="searchType != null and searchType != ''">
					<choose>
						<when test="searchType == 'title'">
							AND B.TITLE LIKE '%' || #{searchKeyword} || '%'
						</when>
						<when test="searchType == 'content'">
							AND B.CONTENT LIKE '%' || #{searchKeyword} || '%'
						</when>
						<when test="searchType == 'writer'">
							AND U.NAME LIKE '%' || #{searchKeyword} || '%'
						</when>
						<when test="searchType == 'titleContent'">
							AND (B.TITLE LIKE '%' || #{searchKeyword} || '%' 
							    OR B.CONTENT LIKE '%' || #{searchKeyword} || '%')
						</when>
					</choose>
				</if>
				<!-- 오류 방지 유저번호, 게시판 분류번호 유무 확인 -->
				<if test="userNo != null">
					AND B.USER_NO = #{userNo}
				</if>
				<if test="codeNo != null">
					AND B.CODE_NO = #{codeNo}
				</if>
				
						 	ORDER BY
			 	<!-- ORDER BY 정렬 조건 분기절: 작성일순, 조회수순, 댓글순, 기본값 게시판 번호순 -->
				<choose>
					<when test="sortType != null and sortType != ''">
						<choose>
							<when test="sortType == 'latest'">
								B.WRITTEN_DATE DESC
							</when>
							<when test="sortType == 'oldest'">
								B.WRITTEN_DATE ASC
							</when>
							<when test="sortType == 'views'">
								B.VIEWS DESC
							</when>
							<when test="sortType == 'comments'">
								(SELECT COUNT(*)
								   FROM COMMENTS C
								  WHERE C.BOARD_NO = B.BOARD_NO) DESC
							</when>
						</choose>
					</when>
					<otherwise>
						B.BOARD_NO DESC
					</otherwise>
				</choose>
			) B
			<!-- 검색, 정렬 조건을 만족한 B쿼리의 endRow 까지만 조회 -->
			<if test="endRow != null">
				<![CDATA[
				WHERE ROWNUM <= #{endRow}
				]]>
			</if>
		) A
		<!-- 중간 SELECT에서 얻은 결과(RNUM과 데이터)를 가지고 startRow 이상인 행만 최종적으로 조회 -->
		<if test="startRow != null and endRow != null">
			<![CDATA[
			WHERE RNUM >= #{startRow}
			]]>
		</if>
	</select>
	
	<!-- 게시판 목록 조회 -->
	<select id="selectCodeList" resultType="BookBoardCodeVo">
	SELECT *
	  FROM BOOK_BOARD_CODE
	</select>
	
	
	<!-- 공지사항 목록 조회 -->
	<select id="selectNoticeList" resultType="BookBoardVo">
		SELECT *
		  FROM (
		        SELECT B.BOARD_NO,
				       B.TITLE,
				       B.CONTENT,
				       TO_CHAR(B.WRITTEN_DATE, 'YYYY-MM-DD') AS WRITTEN_DATE,
				       B.VIEWS,
				       B.USER_NO,
				       B.CODE_NO,
				       B.FILE_GROUP_NUM,
				       B.DELYN,
				       U.NAME AS WRITER
				  FROM BOOK_BOARD B
				  JOIN USERS U ON (B.USER_NO = U.USER_NO)
				 WHERE B.CODE_NO = (SELECT CODE_NO
				                      FROM BOOK_BOARD_CODE
				                     WHERE CODE_NO = 4)
				   AND B.DELYN = 'N'                  
				 ORDER BY B.WRITTEN_DATE DESC
		 )
		<![CDATA[ 
		WHERE ROWNUM <= 3
		]]>
	</select>
	
	<!-- 게시글 상세 조회 -->
	<select id="selectBoardDetail" parameterType="int" resultType="BookBoardVo">
		SELECT B.BOARD_NO,
		       B.TITLE,
		       B.CONTENT,
		       TO_CHAR(B.WRITTEN_DATE, 'YYYY-MM-DD') AS WRITTEN_DATE,
		       B.VIEWS,
		       B.USER_NO,
		       B.CODE_NO,
		       B.FILE_GROUP_NUM,
		       U.NAME AS WRITER,
		       (SELECT COUNT(*)
		          FROM COMMENTS C
		         WHERE C.BOARD_NO = B.BOARD_NO) AS COMMENTS_COUNT
		  FROM BOOK_BOARD B
		  JOIN USERS U ON (B.USER_NO = U.USER_NO)
		 WHERE B.BOARD_NO = #{boardNo}
		   AND B.DELYN = 'N'
	</select>
	
	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="BookBoardVo">
		<selectKey keyProperty="boardNo" resultType="int" order="BEFORE">
			SELECT BOOK_BOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
        INSERT INTO BOOK_BOARD (BOARD_NO,
                                TITLE,
                                CONTENT,
                                WRITTEN_DATE,
                                VIEWS,
                                USER_NO,
                                CODE_NO,
                                FILE_GROUP_NUM,
                                DELYN
						        )
        VALUES (#{boardNo},
				#{title},
				#{content},
				SYSDATE,
				0,
				#{userNo},
				#{codeNo},
				#{fileGroupNum, jdbcType=NUMERIC},
				'N'
		        )
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="BookBoardVo">
		UPDATE BOOK_BOARD
		   SET TITLE = #{title},
			   CONTENT = #{content},
		       CODE_NO = #{codeNo},
		       FILE_GROUP_NUM = #{fileGroupNum, jdbcType=INTEGER}
		 WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 게시글 삭제 (논리적 삭제) -->
	<update id="deleteBoard" parameterType="int">
		UPDATE BOOK_BOARD
		   SET DELYN = 'Y',
		 WHERE BOARD_NO = #{boardNo}
	</update>
			
	<!-- 조회수 증가 -->
	<update id="updateViewCount" parameterType="int">
		UPDATE BOOK_BOARD
		   SET VIEWS = VIEWS + 1
		 WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 전체 게시글 수 조회 (페이징용) -->
	<select id="getTotalBoardCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		  FROM BOOK_BOARD B
		  JOIN USERS U ON (B.USER_NO = U.USER_NO)
		 WHERE 1=1
		   AND B.DELYN = 'N'
		<if test="searchType != null and searchType != ''">
			<choose>
				<when test="searchType == 'title'">
					AND B.TITLE LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchType == 'content'">
					AND B.CONTENT LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchType == 'writer'">
					AND U.NAME LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchType == 'titleContent'">
					AND (B.TITLE LIKE '%' || #{searchKeyword} || '%' 
					    OR B.CONTENT LIKE '%' || #{searchKeyword} || '%')
				</when>
			</choose>
		</if>
		<if test="userNo != null">
			AND B.USER_NO = #{userNo}
		</if>
		<if test="codeNo != null">
			AND B.CODE_NO = #{codeNo}
		</if>
	</select>
	
	<!-- 파일 그룹 번호가 사용 중인지 확인 -->
	<select id="isFileGroupInUse" parameterType="int" resultType="boolean">
    SELECT CASE WHEN
    		    COUNT(*) > 0
    		    THEN 1 ELSE 0
    		    END
      FROM BOOK_BOARD
     WHERE FILE_GROUP_NUM = #{fileGroupNum}
       AND DELYN = 'N'
	</select>
	
	<update id="updateBoardFileGroup" parameterType="map">
	    UPDATE BOOK_BOARD
	       SET FILE_GROUP_NUM = #{fileGroupNum, jdbcType=NUMERIC}
	     WHERE BOARD_NO = #{boardNo}
	</update>	
</mapper>